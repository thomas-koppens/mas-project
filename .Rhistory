data -> read.csv2("rumor-groups-v8_3 test2-spreadsheet.csv")
data -> read.csv2("rumor-groups-v8_3 test2-spreadsheet.csv", sep = ',', header = TRUE)
data <- read.csv2("rumor-groups-v8_3 test2-spreadsheet.csv", sep = ',', header = TRUE)
library(readr)
raw_data <- read_csv("rumor-groups-v8_3 test2-spreadsheet.csv")
View(raw_data)
data <- read.csv2("Adjusted-experiment.csv", sep = ',', header = TRUE)
View(data)
data <- read.csv2("Adjusted-experiment.csv", sep = ',', header = TRUE)
View(data)
knitr::opts_chunk$set(echo = TRUE)
model = lm(proportion ~ pop.weight + fam.weight, data = data)
print(summary(model))
model = lm(proportion ~ pop.weight * fam.weight, data = data)
print(summary(model))
model = lm(proportion ~ pop.weight + fam.weight, data = data)
print(summary(model))
model = lm(proportion ~ pop.weight + fam.weight, data = data)
print(summary(model))
model = lm(proportion ~ pop.weight, data = data)
print(summary(model))
+ fam.weight
model = lm(proportion ~ pop.weight + fam.weight, data = data)
print(summary(model))
model = lm(proportion ~ pop.weight, data = data)
print(summary(model))
model = lm(proportion ~ pop.weight*fam.weight data = data)
model = lm(proportion ~ pop.weight * fam.weight data = data)
model = lm(proportion ~ pop.weight * fam.weight, data = data)
print(summary(model))
model = lm(proportion ~ pop.weight + fam.weight, data = data)
print(summary(model))
model = lm(proportion ~ pop.weight + fam.weight, data = data)
print(summary(model))
model = lm(proportion ~ pop.weight * fam.weight, data = data)
print(summary(model))
model = lm(proportion ~ pop.weight * fam.weight, data = data)
print(summary(model))
average_data <- data %>%
group_by(pop.weight, fam.weight) %>%
summarize(average_proportion = mean(proportion))
library(dplyr)
average_data <- data %>%
group_by(pop.weight, fam.weight) %>%
summarize(average_proportion = mean(proportion))
View(average_data)
dplyr::last_dplyr_warnings()
average_data <- data %>%
group_by(pop.weight, fam.weight) %>%
summarize(average_proportion = mean(proportion) .groups = 'drop')
average_data <- data %>%
group_by(pop.weight, fam.weight) %>%
summarize(average_proportion = mean(proportion), .groups = 'drop')
data$proportion <- as.numeric(as.character(data$proportion))
average_data <- data %>%
group_by(pop.weight, fam.weight) %>%
summarize(average_proportion = mean(proportion), .groups = 'drop')
ggplot(average_data, aes(pop.weight, fam.weight, fill= average_proportion)) +
geom_tile()
library(ggplot2)
ggplot(average_data, aes(pop.weight, fam.weight, fill= average_proportion)) +
geom_tile()
ggplot(average_data, aes(pop.weight, fam.weight, fill= average_proportion)) +
geom_tile() + theme_bw()
ggplot(average_data, aes(pop.weight, fam.weight, fill= average_proportion)) +
geom_tile() +
scale_fill_gradient(low="white", high="Black")
ggplot(average_data, aes(pop.weight, fam.weight, fill= average_proportion)) +
geom_tile() +
scale_fill_gradient(low="white", high="Blue") +
theme_bw()
ggplot(average_data, aes(pop.weight, fam.weight, fill= average_proportion)) +
geom_tile() +
scale_fill_gradient(low="white", high="Blue") +
theme_bw() +
labs(x = "Popularity Weight", y = "Familiarity Weight", title = "Heat Map showing the Average Proportion through a range of Familiarity Weight against Popularity Weight")
ggplot(average_data, aes(pop.weight, fam.weight, fill= average_proportion)) +
geom_tile() +
scale_fill_gradient(low="white", high="Blue") +
theme_bw() +
labs(x = "Popularity Weight", y = "Familiarity Weight", title = "Heat Map showing Average Proportion")
plot <- plot + guides(fill=guide_legend(title="Average Proportion"))
plot <- ggplot(average_data, aes(pop.weight, fam.weight, fill= average_proportion)) +
geom_tile() +
scale_fill_gradient(low="white", high="Blue") +
theme_bw() +
labs(x = "Popularity Weight", y = "Familiarity Weight", title = "Heat Map showing Average Proportion")
plot <- plot + guides(fill=guide_legend(title="Average Proportion"))
plot
data$proportion <- as.numeric(as.character(data$proportion))
data$proportion <- data$proportion * 100
average_data <- data %>%
group_by(pop.weight, fam.weight) %>%
summarize(average_proportion = mean(proportion), .groups = 'drop')
library(ggplot2)
plot <- ggplot(average_data, aes(pop.weight, fam.weight, fill= average_proportion)) +
geom_tile() +
scale_fill_gradient(low="white", high="Blue") +
theme_bw() +
labs(x = "Popularity Weight", y = "Familiarity Weight", title = "Heat Map showing Average Proportion")
plot <- plot + guides(fill=guide_legend(title="Average Proportion"))
plot
plot <- ggplot(average_data, aes(pop.weight, fam.weight, fill= average_proportion)) +
geom_tile() +
scale_fill_gradient(low="white", high="Blue") +
theme_bw() +
labs(x = "Popularity Weight", y = "Familiarity Weight", title = "Heat Map showing Dominant Percentage")
plot <- plot + guides(fill=guide_legend(title="Dominant Percentage"))
plot
plot <- ggplot(average_data, aes(pop.weight, fam.weight, fill= average_proportion)) +
geom_tile() +
scale_fill_gradient(low="white", high="Blue") +
theme_bw() +
labs(x = "Popularity Weight", y = "Familiarity Weight", title = "Heat Map Showing Dominant Percentage")
plot <- plot + guides(fill=guide_legend(title="Dominant Percentage"))
plot
ggsave("HeatMap_DominantPercentage", last_plot())
ggsave("HeatMap_DominantPercentage.png", last_plot(), width = 10, height = 10)
ggsave("HeatMap_DominantPercentage.png", last_plot(), width = 5, height = 5)
ggsave("HeatMap_DominantPercentage.png", last_plot(), width = 10, height = 5)
ggsave("HeatMap_DominantPercentage.png", last_plot(), width = 8, height = 5)
# Data
data <- read.csv2("Adjusted-experiment.csv", sep = ',', header = TRUE)
print(head(data))
print(tail(data))
print(summary(data))
print(str(data))
# Model
model = lm(proportion ~ pop.weight * fam.weight, data = data)
print(summary(model))
